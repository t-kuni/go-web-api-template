name: Feature Test
on:
  pull_request:
    types: [opened, synchronize]
  workflow_dispatch:

jobs:
  feature-test:
    name: Feature Test
    runs-on: ubuntu-latest
    timeout-minutes: 10
    services:
      mysql:
        image: mysql:8.0.24
        env:
          MYSQL_DATABASE: test
          MYSQL_ROOT_PASSWORD: root
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version-file: ./go.mod
          cache: true
          cache-dependency-path: ./go.sum
      - name: Download dependencies
        run: go mod download
      - name: Copy .env
        run: cp .env.feature.example .env.feature
      - name: Install tools
        run: |
          go install github.com/golang/mock/mockgen@v1.6.0
          go install gotest.tools/gotestsum@v1.8.2
          # Swagger
          download_url=$(curl -s https://api.github.com/repos/go-swagger/go-swagger/releases/latest | \
                jq -r '.assets[] | select(.name | contains("'"$(uname | tr '[:upper:]' '[:lower:]')"'_amd64")) | .browser_download_url') && \
              curl -o /usr/local/bin/swagger -L'#' "$download_url" && \
              chmod +x /usr/local/bin/swagger
      - name: Generate code
        run: make generate
      - name: Migrate DB
        run: |
          go run commands/migrate/main.go
          go run commands/seed/main.go --seed=test
        env:
          DB_HOST: localhost
          DB_PORT: 3306
          DB_USER: root
          DB_PASSWORD: root
          DB_DATABASE: test
      - name: Clear test cache
        run: go clean -testcache
      - name: Test
        run: make test
        env:
          DB_HOST: localhost
          DB_PORT: 3306
          DB_USER: root
          DB_PASSWORD: root
          DB_DATABASE: test
